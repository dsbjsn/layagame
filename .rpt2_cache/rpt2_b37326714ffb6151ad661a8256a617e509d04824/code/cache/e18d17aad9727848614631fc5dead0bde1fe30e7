{
  "code": "import { md5 } from \"./md5\";\r\nexport default class HttpUtil {\r\n    constructor() {\r\n        this.TOKEN = '';\r\n        HttpUtil._instance = this;\r\n    }\r\n    static get Instance() {\r\n        if (!HttpUtil._instance)\r\n            new HttpUtil();\r\n        return HttpUtil._instance;\r\n    }\r\n    static request(param) {\r\n        HttpUtil.Instance.request(param);\r\n    }\r\n    request(param) {\r\n        param = this.param(param);\r\n        let r = new Laya.HttpRequest();\r\n        r.once(Laya.Event.COMPLETE, this, () => { if (param.complete)\r\n            param.complete(r.data); });\r\n        r.once(Laya.Event.ERROR, this, err => { if (param.error)\r\n            param.error(err); });\r\n        r.send(param.url, this.obj2str(param.data), param.method, param.responseType);\r\n    }\r\n    param(param = {}) {\r\n        let d = param.data || {};\r\n        param.data = d;\r\n        param.method = param.method || 'post';\r\n        param.responseType = param.responseType || 'json';\r\n        return param;\r\n    }\r\n    objSort(param) {\r\n        var newkeyArray = Object.keys(param).sort();\r\n        var newParam = {};\r\n        for (var i = 0; i < newkeyArray.length; i++) {\r\n            newParam[newkeyArray[i]] = param[newkeyArray[i]];\r\n        }\r\n        return newParam;\r\n    }\r\n    createSign(param) {\r\n        for (let i in ['sign', 'id', 'action', 'api', 'version'])\r\n            if (typeof (param[i]) != \"undefined\")\r\n                delete param[i];\r\n        var newParam = this.objSort(param);\r\n        var signString = '';\r\n        for (var i in newParam) {\r\n            signString += i + newParam[i];\r\n        }\r\n        return new md5().hex_md5(signString);\r\n    }\r\n    obj2str(param) {\r\n        let str = '';\r\n        for (let k in param) {\r\n            str += '&' + k + '=' + param[k];\r\n        }\r\n        return str.substring(1);\r\n    }\r\n}\r\n",
  "references": [
    "E:/LayaModle/melee/src/utils/md5.ts"
  ]
}
