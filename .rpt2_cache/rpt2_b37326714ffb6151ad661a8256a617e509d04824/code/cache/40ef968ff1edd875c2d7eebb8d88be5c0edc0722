{
  "code": "import { roundRectPath } from \"./common\";\r\nimport SingtonClass from \"./SingtonClass\";\r\nexport default class TipsUtil extends SingtonClass {\r\n    constructor() {\r\n        super();\r\n        this.root = null;\r\n        this.LoadingBox = null;\r\n        this.LoadingTimer = null;\r\n        if (!this.root) {\r\n            this.root = Laya.stage.addChild(new Laya.Sprite());\r\n            this.root.zOrder = 1001;\r\n        }\r\n    }\r\n    static alert(content, options = {}, yes = null) {\r\n        TipsUtil.Instance().alert(content, options, yes);\r\n    }\r\n    alert(content, options = {}, yes = null) { }\r\n    static msg(content, options = {}, end = null) {\r\n        TipsUtil.Instance().msg(content, options, end);\r\n    }\r\n    msg(content, options = { time: 1500 }, end = null) {\r\n        let box = this.root.addChild(new Laya.Box());\r\n        let bg = box.addChild(new Laya.Sprite());\r\n        let txt = box.addChild(new Laya.Label());\r\n        txt.text = content;\r\n        txt.font = \"SimHei\";\r\n        txt.color = \"#ffffff\";\r\n        txt.padding = \"15,15,15,15\";\r\n        txt.fontSize = 30;\r\n        box.width = bg.width = txt.width;\r\n        box.height = bg.height = txt.height;\r\n        bg.graphics.drawPath(0, 0, roundRectPath(0, 0, txt.width, txt.height, 10), { fillStyle: \"#000000\" });\r\n        bg.alpha = 0.5;\r\n        box.x = (Laya.stage.width - box.width) / 2;\r\n        box.y = (Laya.stage.height - box.height) / 2;\r\n        setTimeout(() => {\r\n            box.removeSelf();\r\n            if (end)\r\n                end();\r\n        }, options.time || 1500);\r\n    }\r\n    static confirm(content, options = {}, yes = null, cancel = null) {\r\n        TipsUtil.Instance().confirm(content, options, yes, cancel);\r\n    }\r\n    confirm(content, options = {}, yes = null, cancel = null) {\r\n        let box = this.root.addChild(new Laya.Box());\r\n        let imgBg = box.addChild(new Laya.Sprite());\r\n        let txtContent = box.addChild(new Laya.Label());\r\n        let txtTitle = box.addChild(new Laya.Label());\r\n        let txtBtnCancel = box.addChild(new Laya.Label());\r\n        let txtBtnYes = box.addChild(new Laya.Label());\r\n        txtTitle.dataSource = txtBtnCancel.dataSource = txtBtnYes.dataSource = txtContent.dataSource = {\r\n            padding: \"20,20,20,20\",\r\n            font: \"SimHei\",\r\n            fontSize: 30,\r\n            width: Laya.stage.width * 0.6,\r\n            color: \"#000000\",\r\n            align: \"center\",\r\n            x: 0,\r\n            y: 0,\r\n            text: \"提示\",\r\n            overflow: \"hidden\",\r\n        };\r\n        txtContent.dataSource = {\r\n            padding: \"20,20,40,20\",\r\n            overflow: \"\",\r\n            fontSize: 25,\r\n            wordWrap: true,\r\n            text: content,\r\n            color: options.contentColor || \"#5A5A5A\",\r\n            y: txtTitle.height,\r\n        };\r\n        txtBtnCancel.dataSource = {\r\n            text: options.cancelText || '否',\r\n            width: txtTitle.width / 2,\r\n            y: txtTitle.height + txtContent.height,\r\n        };\r\n        txtBtnYes.dataSource = {\r\n            text: options.yesText || '是',\r\n            width: txtTitle.width / 2,\r\n            color: \"#169C24\",\r\n            y: txtTitle.height + txtContent.height,\r\n            x: txtTitle.width / 2,\r\n        };\r\n        box.dataSource = {\r\n            width: Laya.stage.width * 0.6,\r\n            height: txtTitle.height + txtContent.height + txtBtnYes.height,\r\n            x: Laya.stage.width * 0.2,\r\n            y: (Laya.stage.height - txtTitle.height - txtContent.height - txtBtnYes.height) / 2,\r\n        };\r\n        imgBg.graphics.drawPath(0, 0, roundRectPath(0, 0, box.width, box.height, 10), { fillStyle: \"#FFFFFF\" });\r\n        imgBg.graphics.drawLine(0, txtTitle.height + txtContent.height, box.width, txtTitle.height + txtContent.height, \"#D2D2D2\", 1);\r\n        imgBg.graphics.drawLine(box.width / 2, txtTitle.height + txtContent.height, box.width / 2, box.height, \"#D2D2D2\", 1);\r\n        txtBtnCancel.on(Laya.Event.CLICK, this, (e) => { box.removeSelf(); if (cancel)\r\n            cancel(); });\r\n        txtBtnYes.on(Laya.Event.CLICK, this, (e) => { box.removeSelf(); if (yes)\r\n            yes(); });\r\n    }\r\n    static showLoading() { TipsUtil.Instance().showLoading(); }\r\n    static hideLoading() { TipsUtil.Instance().hideLoading(); }\r\n    showLoading() {\r\n        if (!this.LoadingBox) {\r\n            let arr = [\r\n                { x: Math.SQRT1_2, y: Math.SQRT1_2 }, { x: 0, y: 1 },\r\n                { x: -Math.SQRT1_2, y: Math.SQRT1_2 }, { x: -1, y: 0 },\r\n                { x: -Math.SQRT1_2, y: -Math.SQRT1_2 }, { x: 0, y: -1 },\r\n                { x: Math.SQRT1_2, y: -Math.SQRT1_2 }, { x: 1, y: 0 },\r\n            ];\r\n            this.LoadingBox = this.root.addChild(new Laya.Box());\r\n            this.LoadingBox.width = this.LoadingBox.height = 120;\r\n            this.LoadingBox.anchorX = this.LoadingBox.anchorY = 0.5;\r\n            this.LoadingBox.x = Laya.stage.width / 2;\r\n            this.LoadingBox.y = Laya.stage.height / 2;\r\n            for (let i = 0; i < 8; i++) {\r\n                this.LoadingBox.graphics.drawCircle(arr[i].x * 60 + 60, arr[i].y * 60 + 60, 14 - i, \"rgba(255,255,255,\" + (1 - 0.05 * i) + \")\");\r\n            }\r\n        }\r\n        this.LoadingBox.visible = true;\r\n        this.LoadingTimer && clearInterval(this.LoadingTimer);\r\n        this.LoadingTimer = setInterval(() => {\r\n            this.LoadingBox.rotation -= 2;\r\n        }, 30);\r\n    }\r\n    hideLoading() {\r\n        this.LoadingTimer && clearInterval(this.LoadingTimer);\r\n        this.LoadingBox.visible = false;\r\n    }\r\n}\r\n",
  "references": [
    "E:/LayaModle/melee/src/utils/common.ts",
    "E:/LayaModle/melee/src/utils/SingtonClass.ts"
  ]
}
